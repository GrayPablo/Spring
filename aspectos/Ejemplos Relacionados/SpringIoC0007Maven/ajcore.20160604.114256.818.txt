---- AspectJ Properties ---
AspectJ Compiler 1.6.2 built on Saturday Oct 4, 2008 at 05:47:07 GMT
---- Dump Properties ---
Dump file: ajcore.20160604.114256.818.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_72\jre\bin
java.vm.version=25.72-b15
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=ES
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven
java.runtime.version=1.8.0_72-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\usuario\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 10
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_72\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\CollabNet\Subversion Client;E:\bin\Sencha\Cmd\5.1.3.61;C:\Users\usuario\bin\Sencha\Cmd\5.1.3.61;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\Program Files (x86)\sbt\\bin;C:\Program Files (x86)\Heroku\bin;C:\Program Files (x86)\git\cmd;C:\Program Files (x86)\QuickTime\QTSystem\;C:\HashiCorp\Vagrant\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\nodejs\;C:\Users\usuario\AppData\Local\.meteor\;C:\Users\usuario\AppData\Roaming\npm;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=10.0
user.home=C:\Users\usuario
user.timezone=Europe/Paris
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven\target\classes;C:\Users\usuario\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aspects\3.1.2.RELEASE\spring-aspects-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-context-support\3.1.2.RELEASE\spring-context-support-3.1.2.RELEASE.jar;.\..\aspectjweaver.jar
user.name=usuario
java.vm.specification.version=1.8
sun.java.command=com.curso.spring.springioc0007.Main
java.home=C:\Program Files\Java\jdk1.8.0_72\jre
sun.arch.data.model=64
user.language=es
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_72
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_72\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_72\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.2 built on Saturday Oct 4, 2008 at 05:47:07 GMT
info register classloader sun.misc.Launcher$AppClassLoader@18b4aac2
info using configuration file:/C:/Users/usuario/.m2/repository/org/springframework/spring-aspects/3.1.2.RELEASE/spring-aspects-3.1.2.RELEASE.jar!/META-INF/aop.xml
debug weaving 'org.springframework.core.io.AbstractResource'
abort trouble in: 
public abstract class org.springframework.core.io.AbstractResource extends java.lang.Object implements org.springframework.core.io.Resource:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 41)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.core.io.AbstractResource.<init>())
    |               RETURN
    constructor-execution(void org.springframework.core.io.AbstractResource.<init>())
  end public void <init>()

  public boolean exists():
    catch java.io.IOException -> E0
    |               ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 51)
    |               INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getFile ()Ljava/io/File;
    |               INVOKEVIRTUAL java.io.File.exists ()Z
    catch java.io.IOException -> E0
                    IRETURN
                E0: POP   (line 53)
    catch java.lang.Throwable -> E1
    |               ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 56)
    |               INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getInputStream ()Ljava/io/InputStream;
    |               ASTORE_1
    |               ALOAD_1     // Ljava/io/InputStream; is   (line 57)
    |               INVOKEVIRTUAL java.io.InputStream.close ()V
    catch java.lang.Throwable -> E1
                    ICONST_1   (line 58)
                    IRETURN
                E1: POP   (line 60)
                    ICONST_0   (line 61)
                    IRETURN
  end public boolean exists()

  public boolean isReadable():
                    ICONST_1   (line 70)
                    IRETURN
  end public boolean isReadable()

  public boolean isOpen():
                    ICONST_0   (line 77)
                    IRETURN
  end public boolean isOpen()

  public java.net.URL getURL() throws java.io.IOException:
                    NEW java.io.FileNotFoundException   (line 85)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC " cannot be resolved to URL"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.io.FileNotFoundException.<init> (Ljava/lang/String;)V
                    ATHROW
  end public java.net.URL getURL() throws java.io.IOException

  public java.net.URI getURI() throws java.io.IOException:
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 93)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getURL ()Ljava/net/URL;
                    ASTORE_1
    catch java.net.URISyntaxException -> E0
    |               ALOAD_1     // Ljava/net/URL; url   (line 95)
    |               INVOKESTATIC org.springframework.util.ResourceUtils.toURI (Ljava/net/URL;)Ljava/net/URI;
    catch java.net.URISyntaxException -> E0
                    ARETURN
                E0: ASTORE_2   (line 97)
                    NEW org.springframework.core.NestedIOException   (line 98)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC "Invalid URI ["
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/net/URL; url
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;
                    LDC "]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ALOAD_2     // Ljava/net/URISyntaxException; ex
                    INVOKESPECIAL org.springframework.core.NestedIOException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
                    ATHROW
  end public java.net.URI getURI() throws java.io.IOException

  public java.io.File getFile() throws java.io.IOException:
                    NEW java.io.FileNotFoundException   (line 107)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC " cannot be resolved to absolute file path"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.io.FileNotFoundException.<init> (Ljava/lang/String;)V
                    ATHROW
  end public java.io.File getFile() throws java.io.IOException

  public long contentLength() throws java.io.IOException:
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 117)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getInputStream ()Ljava/io/InputStream;
                    ASTORE_1
    finally -> E1
    |               LCONST_0   (line 119)
    |               LSTORE_2
    |               SIPUSH 255   (line 120)
    |               NEWARRAY 8
    |               ASTORE 4
    |               GOTO L1   (line 122)
    |           L0: LLOAD_2     // J size   (line 123)
    |               ILOAD 5     // I read
    |               I2L
    |               LADD
    |               LSTORE_2     // J size
    |           L1: ALOAD_1     // Ljava/io/InputStream; is   (line 122)
    |               ALOAD 4     // [B buf
    |               INVOKEVIRTUAL java.io.InputStream.read ([B)I
    |               DUP
    |               ISTORE 5
    |               ICONST_M1
    |               IF_ICMPNE L0
    |               LLOAD_2     // J size   (line 125)
    |               LSTORE 7
    finally -> E1
    catch java.io.IOException -> E0
    |               ALOAD_1     // Ljava/io/InputStream; is   (line 129)
    |               INVOKEVIRTUAL java.io.InputStream.close ()V
    catch java.io.IOException -> E0
                    GOTO L2
                E0: POP   (line 131)
                L2: LLOAD 7   (line 125)
                    LRETURN
                E1: ASTORE 6   (line 127)
    catch java.io.IOException -> E2
    |               ALOAD_1     // Ljava/io/InputStream; is   (line 129)
    |               INVOKEVIRTUAL java.io.InputStream.close ()V
    catch java.io.IOException -> E2
                    GOTO L3
                E2: POP   (line 131)
                L3: ALOAD 6   (line 133)
                    ATHROW
  end public long contentLength() throws java.io.IOException

  public long lastModified() throws java.io.IOException:
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 142)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getFileForLastModifiedCheck ()Ljava/io/File;
                    INVOKEVIRTUAL java.io.File.lastModified ()J
                    LSTORE_1
                    LLOAD_1     // J lastModified   (line 143)
                    LCONST_0
                    LCMP
                    IFNE L0
                    NEW java.io.FileNotFoundException   (line 144)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC " cannot be resolved in the file system for resolving its last-modified timestamp"   (line 145)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.io.FileNotFoundException.<init> (Ljava/lang/String;)V   (line 144)
                    ATHROW
                L0: LLOAD_1     // J lastModified   (line 147)
                    LRETURN
  end public long lastModified() throws java.io.IOException

  protected java.io.File getFileForLastModifiedCheck() throws java.io.IOException:
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 158)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getFile ()Ljava/io/File;
                    ARETURN
  end protected java.io.File getFileForLastModifiedCheck() throws java.io.IOException

  public org.springframework.core.io.Resource createRelative(String) throws java.io.IOException:
                    NEW java.io.FileNotFoundException   (line 166)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC "Cannot create a relative resource for "
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.io.FileNotFoundException.<init> (Ljava/lang/String;)V
                    ATHROW
  end public org.springframework.core.io.Resource createRelative(String) throws java.io.IOException

  public String getFilename():
                    ACONST_NULL   (line 174)
                    ARETURN
  end public String getFilename()

  public String toString():
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 184)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    ARETURN
  end public String toString()

  public boolean equals(Object):
                    ALOAD_1     // Ljava/lang/Object; obj   (line 193)
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    IF_ACMPEQ L1
                    ALOAD_1     // Ljava/lang/Object; obj   (line 194)
                    INSTANCEOF org.springframework.core.io.Resource
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/Object; obj
                    CHECKCAST org.springframework.core.io.Resource
                    INVOKEINTERFACE org.springframework.core.io.Resource.getDescription ()Ljava/lang/String;
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L1
                L0: ICONST_0
                    IRETURN
                L1: ICONST_1
                    IRETURN   (line 193)
  end public boolean equals(Object)

  public int hashCode():
                    ALOAD_0     // Lorg/springframework/core/io/AbstractResource; this   (line 203)
                    INVOKEVIRTUAL org.springframework.core.io.AbstractResource.getDescription ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.hashCode ()I
                    IRETURN
  end public int hashCode()

end public abstract class org.springframework.core.io.AbstractResource
 -- (NullPointerException) null
null
java.lang.NullPointerException

debug weaving 'org.springframework.core.NestedIOException'
abort trouble in: 
public class org.springframework.core.NestedIOException extends java.io.IOException:
  static void <clinit>():
    staticinitialization(void org.springframework.core.NestedIOException.<clinit>())
    |               LDC org.springframework.core.NestedExceptionUtils   (line 43)
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               POP
    |               RETURN   (line 38)
    staticinitialization(void org.springframework.core.NestedIOException.<clinit>())
  end static void <clinit>()

  public void <init>(String):
                    ALOAD_0     // Lorg/springframework/core/NestedIOException; this   (line 52)
                    ALOAD_1     // Ljava/lang/String; msg
                    INVOKESPECIAL java.io.IOException.<init> (Ljava/lang/String;)V
    constructor-execution(void org.springframework.core.NestedIOException.<init>(java.lang.String))
    |               RETURN   (line 53)
    constructor-execution(void org.springframework.core.NestedIOException.<init>(java.lang.String))
  end public void <init>(String)

  public void <init>(String, Throwable):
                    ALOAD_0     // Lorg/springframework/core/NestedIOException; this   (line 62)
                    ALOAD_1     // Ljava/lang/String; msg
                    INVOKESPECIAL java.io.IOException.<init> (Ljava/lang/String;)V
    constructor-execution(void org.springframework.core.NestedIOException.<init>(java.lang.String, java.lang.Throwable))
    |               ALOAD_0     // Lorg/springframework/core/NestedIOException; this   (line 63)
    |               ALOAD_2     // Ljava/lang/Throwable; cause
    |               INVOKEVIRTUAL org.springframework.core.NestedIOException.initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;
    |               POP
    |               RETURN   (line 64)
    constructor-execution(void org.springframework.core.NestedIOException.<init>(java.lang.String, java.lang.Throwable))
  end public void <init>(String, Throwable)

  public String getMessage():
                    ALOAD_0     // Lorg/springframework/core/NestedIOException; this   (line 73)
                    INVOKESPECIAL java.io.IOException.getMessage ()Ljava/lang/String;
                    ALOAD_0     // Lorg/springframework/core/NestedIOException; this
                    INVOKEVIRTUAL org.springframework.core.NestedIOException.getCause ()Ljava/lang/Throwable;
                    INVOKESTATIC org.springframework.core.NestedExceptionUtils.buildMessage (Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
                    ARETURN
  end public String getMessage()
end public class org.springframework.core.NestedIOException
 -- (NullPointerException) null
null
java.lang.NullPointerException

debug weaving 'org.springframework.util.CollectionUtils'
abort trouble in: 
public abstract class org.springframework.util.CollectionUtils extends java.lang.Object:
  public void <init>():
                    ALOAD_0     // Lorg/springframework/util/CollectionUtils; this   (line 42)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.util.CollectionUtils.<init>())
    |               RETURN
    constructor-execution(void org.springframework.util.CollectionUtils.<init>())
  end public void <init>()

  public static boolean isEmpty(java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 51)
                    IFNULL L0
                    ALOAD_0     // Ljava/util/Collection; collection
                    INVOKEINTERFACE java.util.Collection.isEmpty ()Z
                    IFNE L0
                    ICONST_0
                    IRETURN
                L0: ICONST_1
                    IRETURN
  end public static boolean isEmpty(java.util.Collection)

  public static boolean isEmpty(java.util.Map):
                    ALOAD_0     // Ljava/util/Map; map   (line 61)
                    IFNULL L0
                    ALOAD_0     // Ljava/util/Map; map
                    INVOKEINTERFACE java.util.Map.isEmpty ()Z
                    IFNE L0
                    ICONST_0
                    IRETURN
                L0: ICONST_1
                    IRETURN
  end public static boolean isEmpty(java.util.Map)

  public static java.util.List arrayToList(Object):
                    ALOAD_0     // Ljava/lang/Object; source   (line 74)
                    INVOKESTATIC org.springframework.util.ObjectUtils.toObjectArray (Ljava/lang/Object;)[Ljava/lang/Object;
                    INVOKESTATIC java.util.Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;
                    ARETURN
  end public static java.util.List arrayToList(Object)

  public static void mergeArrayIntoCollection(Object, java.util.Collection):
                    ALOAD_1     // Ljava/util/Collection; collection   (line 84)
                    IFNONNULL L0
                    NEW java.lang.IllegalArgumentException   (line 85)
                    DUP
                    LDC "Collection must not be null"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_0     // Ljava/lang/Object; array   (line 87)
                    INVOKESTATIC org.springframework.util.ObjectUtils.toObjectArray (Ljava/lang/Object;)[Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // [Ljava/lang/Object; arr   (line 88)
                    DUP
                    ASTORE 6
                    ARRAYLENGTH
                    ISTORE 5
                    ICONST_0
                    ISTORE 4
                    GOTO L2
                L1: ALOAD 6
                    ILOAD 4
                    AALOAD
                    ASTORE_3
                    ALOAD_1     // Ljava/util/Collection; collection   (line 89)
                    ALOAD_3     // Ljava/lang/Object; elem
                    INVOKEINTERFACE java.util.Collection.add (Ljava/lang/Object;)Z
                    POP
                    IINC 4 1   (line 88)
                L2: ILOAD 4
                    ILOAD 5
                    IF_ICMPLT L1
                    RETURN   (line 91)
  end public static void mergeArrayIntoCollection(Object, java.util.Collection)

  public static void mergePropertiesIntoMap(java.util.Properties, java.util.Map):
                    ALOAD_1     // Ljava/util/Map; map   (line 103)
                    IFNONNULL L0
                    NEW java.lang.IllegalArgumentException   (line 104)
                    DUP
                    LDC "Map must not be null"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_0     // Ljava/util/Properties; props   (line 106)
                    IFNULL L4
                    ALOAD_0     // Ljava/util/Properties; props   (line 107)
                    INVOKEVIRTUAL java.util.Properties.propertyNames ()Ljava/util/Enumeration;
                    ASTORE_2
                    GOTO L3
                L1: ALOAD_2     // Ljava/util/Enumeration; en   (line 108)
                    INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ASTORE_3
                    ALOAD_0     // Ljava/util/Properties; props   (line 109)
                    ALOAD_3     // Ljava/lang/String; key
                    INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Object; value   (line 110)
                    IFNONNULL L2
                    ALOAD_0     // Ljava/util/Properties; props   (line 112)
                    ALOAD_3     // Ljava/lang/String; key
                    INVOKEVIRTUAL java.util.Properties.get (Ljava/lang/Object;)Ljava/lang/Object;
                    ASTORE 4     // Ljava/lang/Object; value
                L2: ALOAD_1     // Ljava/util/Map; map   (line 114)
                    ALOAD_3     // Ljava/lang/String; key
                    ALOAD 4     // Ljava/lang/Object; value
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                L3: ALOAD_2     // Ljava/util/Enumeration; en   (line 107)
                    INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
                    IFNE L1
                L4: RETURN   (line 117)
  end public static void mergePropertiesIntoMap(java.util.Properties, java.util.Map)

  public static boolean contains(java.util.Iterator, Object):
                    ALOAD_0     // Ljava/util/Iterator; iterator   (line 127)
                    IFNULL L2
                    GOTO L1   (line 128)
                L0: ALOAD_0     // Ljava/util/Iterator; iterator   (line 129)
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Object; candidate   (line 130)
                    ALOAD_1     // Ljava/lang/Object; element
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L1
                    ICONST_1   (line 131)
                    IRETURN
                L1: ALOAD_0     // Ljava/util/Iterator; iterator   (line 128)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L0
                L2: ICONST_0   (line 135)
                    IRETURN
  end public static boolean contains(java.util.Iterator, Object)

  public static boolean contains(java.util.Enumeration, Object):
                    ALOAD_0     // Ljava/util/Enumeration; enumeration   (line 145)
                    IFNULL L2
                    GOTO L1   (line 146)
                L0: ALOAD_0     // Ljava/util/Enumeration; enumeration   (line 147)
                    INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Object; candidate   (line 148)
                    ALOAD_1     // Ljava/lang/Object; element
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L1
                    ICONST_1   (line 149)
                    IRETURN
                L1: ALOAD_0     // Ljava/util/Enumeration; enumeration   (line 146)
                    INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
                    IFNE L0
                L2: ICONST_0   (line 153)
                    IRETURN
  end public static boolean contains(java.util.Enumeration, Object)

  public static boolean containsInstance(java.util.Collection, Object):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 165)
                    IFNULL L2
                    ALOAD_0     // Ljava/util/Collection; collection   (line 166)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                    GOTO L1
                L0: ALOAD_3
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Object; candidate   (line 167)
                    ALOAD_1     // Ljava/lang/Object; element
                    IF_ACMPNE L1
                    ICONST_1   (line 168)
                    IRETURN
                L1: ALOAD_3   (line 166)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L0
                L2: ICONST_0   (line 172)
                    IRETURN
  end public static boolean containsInstance(java.util.Collection, Object)

  public static boolean containsAny(java.util.Collection, java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; source   (line 183)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/util/Collection; candidates
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L1
                L0: ICONST_0   (line 184)
                    IRETURN
                L1: ALOAD_1     // Ljava/util/Collection; candidates   (line 186)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                    GOTO L3
                L2: ALOAD_3
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_0     // Ljava/util/Collection; source   (line 187)
                    ALOAD_2     // Ljava/lang/Object; candidate
                    INVOKEINTERFACE java.util.Collection.contains (Ljava/lang/Object;)Z
                    IFEQ L3
                    ICONST_1   (line 188)
                    IRETURN
                L3: ALOAD_3   (line 186)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L2
                    ICONST_0   (line 191)
                    IRETURN
  end public static boolean containsAny(java.util.Collection, java.util.Collection)

  public static Object findFirstMatch(java.util.Collection, java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; source   (line 204)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/util/Collection; candidates
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L1
                L0: ACONST_NULL   (line 205)
                    ARETURN
                L1: ALOAD_1     // Ljava/util/Collection; candidates   (line 207)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                    GOTO L3
                L2: ALOAD_3
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_0     // Ljava/util/Collection; source   (line 208)
                    ALOAD_2     // Ljava/lang/Object; candidate
                    INVOKEINTERFACE java.util.Collection.contains (Ljava/lang/Object;)Z
                    IFEQ L3
                    ALOAD_2     // Ljava/lang/Object; candidate   (line 209)
                    ARETURN
                L3: ALOAD_3   (line 207)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L2
                    ACONST_NULL   (line 212)
                    ARETURN
  end public static Object findFirstMatch(java.util.Collection, java.util.Collection)

  public static Object findValueOfType(java.util.Collection, Class):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 224)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L0
                    ACONST_NULL   (line 225)
                    ARETURN
                L0: ACONST_NULL   (line 227)
                    ASTORE_2
                    ALOAD_0     // Ljava/util/Collection; collection   (line 228)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE 4
                    GOTO L4
                L1: ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_3
                    ALOAD_1     // Ljava/lang/Class; type   (line 229)
                    IFNULL L2
                    ALOAD_1     // Ljava/lang/Class; type
                    ALOAD_3     // Ljava/lang/Object; element
                    INVOKEVIRTUAL java.lang.Class.isInstance (Ljava/lang/Object;)Z
                    IFEQ L4
                L2: ALOAD_2     // Ljava/lang/Object; value   (line 230)
                    IFNULL L3
                    ACONST_NULL   (line 232)
                    ARETURN
                L3: ALOAD_3     // Ljava/lang/Object; element   (line 234)
                    ASTORE_2     // Ljava/lang/Object; value
                L4: ALOAD 4   (line 228)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L1
                    ALOAD_2     // Ljava/lang/Object; value   (line 237)
                    ARETURN
  end public static Object findValueOfType(java.util.Collection, Class)

  public static Object findValueOfType(java.util.Collection, Class[]):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 250)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFNE L0
                    ALOAD_1     // [Ljava/lang/Class; types
                    INVOKESTATIC org.springframework.util.ObjectUtils.isEmpty ([Ljava/lang/Object;)Z
                    IFEQ L1
                L0: ACONST_NULL   (line 251)
                    ARETURN
                L1: ALOAD_1     // [Ljava/lang/Class; types   (line 253)
                    DUP
                    ASTORE 5
                    ARRAYLENGTH
                    ISTORE 4
                    ICONST_0
                    ISTORE_3
                    GOTO L4
                L2: ALOAD 5
                    ILOAD_3
                    AALOAD
                    ASTORE_2
                    ALOAD_0     // Ljava/util/Collection; collection   (line 254)
                    ALOAD_2     // Ljava/lang/Class; type
                    INVOKESTATIC org.springframework.util.CollectionUtils.findValueOfType (Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/Object; value   (line 255)
                    IFNULL L3
                    ALOAD 6     // Ljava/lang/Object; value   (line 256)
                    ARETURN
                L3: IINC_3 1   (line 253)
                L4: ILOAD_3
                    ILOAD 4
                    IF_ICMPLT L2
                    ACONST_NULL   (line 259)
                    ARETURN
  end public static Object findValueOfType(java.util.Collection, Class[])

  public static boolean hasUniqueObject(java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 269)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L0
                    ICONST_0   (line 270)
                    IRETURN
                L0: ICONST_0   (line 272)
                    ISTORE_1
                    ACONST_NULL   (line 273)
                    ASTORE_2
                    ALOAD_0     // Ljava/util/Collection; collection   (line 274)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE 4
                    GOTO L3
                L1: ALOAD 4
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_3
                    ILOAD_1     // Z hasCandidate   (line 275)
                    IFNE L2
                    ICONST_1   (line 276)
                    ISTORE_1     // Z hasCandidate
                    ALOAD_3     // Ljava/lang/Object; elem   (line 277)
                    ASTORE_2     // Ljava/lang/Object; candidate
                    GOTO L3
                L2: ALOAD_2     // Ljava/lang/Object; candidate   (line 279)
                    ALOAD_3     // Ljava/lang/Object; elem
                    IF_ACMPEQ L3
                    ICONST_0   (line 280)
                    IRETURN
                L3: ALOAD 4   (line 274)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L1
                    ICONST_1   (line 283)
                    IRETURN
  end public static boolean hasUniqueObject(java.util.Collection)

  public static Class findCommonElementType(java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; collection   (line 293)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L0
                    ACONST_NULL   (line 294)
                    ARETURN
                L0: ACONST_NULL   (line 296)
                    ASTORE_1
                    ALOAD_0     // Ljava/util/Collection; collection   (line 297)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                    GOTO L3
                L1: ALOAD_3
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Object; val   (line 298)
                    IFNULL L3
                    ALOAD_1     // Ljava/lang/Class; candidate   (line 299)
                    IFNONNULL L2
                    ALOAD_2     // Ljava/lang/Object; val   (line 300)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ASTORE_1     // Ljava/lang/Class; candidate
                    GOTO L3
                L2: ALOAD_1     // Ljava/lang/Class; candidate   (line 302)
                    ALOAD_2     // Ljava/lang/Object; val
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    IF_ACMPEQ L3
                    ACONST_NULL   (line 303)
                    ARETURN
                L3: ALOAD_3   (line 297)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L1
                    ALOAD_1     // Ljava/lang/Class; candidate   (line 307)
                    ARETURN
  end public static Class findCommonElementType(java.util.Collection)

  public static Object[] toArray(java.util.Enumeration, Object[]):
                    NEW java.util.ArrayList   (line 316)
                    DUP
                    INVOKESPECIAL java.util.ArrayList.<init> ()V
                    ASTORE_2
                    GOTO L1   (line 317)
                L0: ALOAD_2     // Ljava/util/ArrayList; elements   (line 318)
                    ALOAD_0     // Ljava/util/Enumeration; enumeration
                    INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
                    INVOKEVIRTUAL java.util.ArrayList.add (Ljava/lang/Object;)Z
                    POP
                L1: ALOAD_0     // Ljava/util/Enumeration; enumeration   (line 317)
                    INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
                    IFNE L0
                    ALOAD_2     // Ljava/util/ArrayList; elements   (line 320)
                    ALOAD_1     // [Ljava/lang/Object; array
                    INVOKEVIRTUAL java.util.ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    ARETURN
  end public static Object[] toArray(java.util.Enumeration, Object[])

  public static java.util.Iterator toIterator(java.util.Enumeration):
                    NEW org.springframework.util.CollectionUtils$EnumerationIterator   (line 329)
                    DUP
                    ALOAD_0     // Ljava/util/Enumeration; enumeration
                    INVOKESPECIAL org.springframework.util.CollectionUtils$EnumerationIterator.<init> (Ljava/util/Enumeration;)V
                    ARETURN
  end public static java.util.Iterator toIterator(java.util.Enumeration)

  public static org.springframework.util.MultiValueMap toMultiValueMap(java.util.Map):
                    NEW org.springframework.util.CollectionUtils$MultiValueMapAdapter   (line 339)
                    DUP
                    ALOAD_0     // Ljava/util/Map; map
                    INVOKESPECIAL org.springframework.util.CollectionUtils$MultiValueMapAdapter.<init> (Ljava/util/Map;)V
                    ARETURN
  end public static org.springframework.util.MultiValueMap toMultiValueMap(java.util.Map)

  public static org.springframework.util.MultiValueMap unmodifiableMultiValueMap(org.springframework.util.MultiValueMap):
                    ALOAD_0     // Lorg/springframework/util/MultiValueMap; map   (line 350)
                    LDC "'map' must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    NEW java.util.LinkedHashMap   (line 351)
                    DUP
                    ALOAD_0     // Lorg/springframework/util/MultiValueMap; map
                    INVOKEINTERFACE org.springframework.util.MultiValueMap.size ()I
                    INVOKESPECIAL java.util.LinkedHashMap.<init> (I)V
                    ASTORE_1
                    ALOAD_0     // Lorg/springframework/util/MultiValueMap; map   (line 352)
                    INVOKEINTERFACE org.springframework.util.MultiValueMap.entrySet ()Ljava/util/Set;
                    INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                    GOTO L1
                L0: ALOAD_3
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST java.util.Map$Entry
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Map$Entry; entry   (line 353)
                    INVOKEINTERFACE java.util.Map$Entry.getValue ()Ljava/lang/Object;
                    CHECKCAST java.util.List
                    INVOKESTATIC java.util.Collections.unmodifiableList (Ljava/util/List;)Ljava/util/List;
                    ASTORE 4
                    ALOAD_1     // Ljava/util/Map; result   (line 354)
                    ALOAD_2     // Ljava/util/Map$Entry; entry
                    INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
                    ALOAD 4     // Ljava/util/List; values
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                L1: ALOAD_3   (line 352)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L0
                    ALOAD_1     // Ljava/util/Map; result   (line 356)
                    INVOKESTATIC java.util.Collections.unmodifiableMap (Ljava/util/Map;)Ljava/util/Map;
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Map; unmodifiableMap   (line 357)
                    INVOKESTATIC org.springframework.util.CollectionUtils.toMultiValueMap (Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
                    ARETURN
  end public static org.springframework.util.MultiValueMap unmodifiableMultiValueMap(org.springframework.util.MultiValueMap)

end public abstract class org.springframework.util.CollectionUtils
 -- (NullPointerException) null
null
java.lang.NullPointerException

debug weaving 'org.springframework.util.MultiValueMap'
---- org.aspectj.weaver.ltw.LTWWorld@28c97a5 ----
Class loader:
sun.misc.Launcher$AppClassLoader@18b4aac2
Class loader parent:
sun.misc.Launcher$ExtClassLoader@722c41f4
Shadow mungers:
(around(extraFlags: 3): ((((((((((within(@org.springframework.cache.annotation.CacheEvict *) && execution(public * @org.springframework.cache.annotation.CacheEvict *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)) || (((within(@org.springframework.cache.annotation.Caching *) && execution(public * @org.springframework.cache.annotation.Caching *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.CachePut *) && execution(public * @org.springframework.cache.annotation.CachePut *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.Cacheable *) && execution(public * @org.springframework.cache.annotation.Cacheable *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Caching * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Cacheable * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CacheEvict * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CachePut * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)))->java.lang.Object org.springframework.cache.aspectj.AbstractCacheAspect.ajc$around$org_springframework_cache_aspectj_AbstractCacheAspect$1$2bc714b5(java.lang.Object, org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint))
(around(extraFlags: 5): ((execution(@org.springframework.scheduling.annotation.Async (void || java.util.concurrent.Future+) *(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)) || (execution((void || java.util.concurrent.Future+) @org.springframework.scheduling.annotation.Async *.*(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)))->java.lang.Object org.springframework.scheduling.aspectj.AbstractAsyncExecutionAspect.ajc$around$org_springframework_scheduling_aspectj_AbstractAsyncExecutionAspect$1$6c004c3e(org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint$StaticPart))
org.aspectj.weaver.Checker@5abff562
org.aspectj.weaver.Checker@12140c1d
(before(extraFlags: 4): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$before$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96c(java.lang.Object, org.aspectj.lang.JoinPoint$StaticPart))
(afterThrowing(extraFlags: 1): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterThrowing$org_springframework_transaction_aspectj_AbstractTransactionAspect$2$2a73e96c(java.lang.Object, java.lang.Throwable))
(afterReturning: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterReturning$org_springframework_transaction_aspectj_AbstractTransactionAspect$3$2a73e96c(java.lang.Object))
(after: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$after$org_springframework_transaction_aspectj_AbstractTransactionAspect$4$2a73e96c(java.lang.Object))
(before: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject.new(..)) && initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..))) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65(java.lang.Object))
(afterReturning: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..)) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && !(@this(org.springframework.beans.factory.annotation.Configurable) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable)))) && if(boolean org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$if$6f1(org.aspectj.lang.JoinPoint))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c(java.lang.Object))
(afterReturning: (((execution(java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport+.readResolve()) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052(java.lang.Object))
Type mungers:
(BcelTypeMunger ResolvedTypeMunger(Method, java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport.readResolve()))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.ConfigurableObject))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport))
Late Type mungers:
Empty
