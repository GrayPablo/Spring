---- AspectJ Properties ---
AspectJ Compiler 1.6.2 built on Saturday Oct 4, 2008 at 05:47:07 GMT
---- Dump Properties ---
Dump file: ajcore.20160604.114221.326.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_72\jre\bin
java.vm.version=25.72-b15
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=ES
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven
java.runtime.version=1.8.0_72-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\usuario\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 10
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_72\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\CollabNet\Subversion Client;E:\bin\Sencha\Cmd\5.1.3.61;C:\Users\usuario\bin\Sencha\Cmd\5.1.3.61;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\Program Files (x86)\sbt\\bin;C:\Program Files (x86)\Heroku\bin;C:\Program Files (x86)\git\cmd;C:\Program Files (x86)\QuickTime\QTSystem\;C:\HashiCorp\Vagrant\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\nodejs\;C:\Users\usuario\AppData\Local\.meteor\;C:\Users\usuario\AppData\Roaming\npm;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=10.0
user.home=C:\Users\usuario
user.timezone=Europe/Paris
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven\target\classes;C:\Users\usuario\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aspects\3.1.2.RELEASE\spring-aspects-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-context-support\3.1.2.RELEASE\spring-context-support-3.1.2.RELEASE.jar;.\..\aspectjweaver.jar
user.name=usuario
java.vm.specification.version=1.8
sun.java.command=com.curso.spring.springioc0007.Main
java.home=C:\Program Files\Java\jdk1.8.0_72\jre
sun.arch.data.model=64
user.language=es
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_72
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_72\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_72\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.2 built on Saturday Oct 4, 2008 at 05:47:07 GMT
info register classloader sun.misc.Launcher$AppClassLoader@18b4aac2
info using configuration file:/C:/Users/usuario/.m2/repository/org/springframework/spring-aspects/3.1.2.RELEASE/spring-aspects-3.1.2.RELEASE.jar!/META-INF/aop.xml
debug weaving 'org.springframework.util.ReflectionUtils'
abort trouble in: 
public abstract class org.springframework.util.ReflectionUtils extends java.lang.Object:
  private static final java.util.regex.Pattern CGLIB_RENAMED_METHOD_PATTERN
  public static org.springframework.util.ReflectionUtils$FieldFilter COPYABLE_FIELDS
  public static org.springframework.util.ReflectionUtils$MethodFilter NON_BRIDGED_METHODS
  public static org.springframework.util.ReflectionUtils$MethodFilter USER_DECLARED_METHODS
  static void <clinit>():
    staticinitialization(void org.springframework.util.ReflectionUtils.<clinit>())
    |               LDC "CGLIB\$(.+)\$\d+"   (line 47)
    |               INVOKESTATIC java.util.regex.Pattern.compile (Ljava/lang/String;)Ljava/util/regex/Pattern;
    |               PUTSTATIC org.springframework.util.ReflectionUtils.CGLIB_RENAMED_METHOD_PATTERN Ljava/util/regex/Pattern;
    |               NEW org.springframework.util.ReflectionUtils$1   (line 664)
    |               DUP
    |               INVOKESPECIAL org.springframework.util.ReflectionUtils$1.<init> ()V
    |               PUTSTATIC org.springframework.util.ReflectionUtils.COPYABLE_FIELDS Lorg/springframework/util/ReflectionUtils$FieldFilter;
    |               NEW org.springframework.util.ReflectionUtils$2   (line 675)
    |               DUP
    |               INVOKESPECIAL org.springframework.util.ReflectionUtils$2.<init> ()V
    |               PUTSTATIC org.springframework.util.ReflectionUtils.NON_BRIDGED_METHODS Lorg/springframework/util/ReflectionUtils$MethodFilter;
    |               NEW org.springframework.util.ReflectionUtils$3   (line 687)
    |               DUP
    |               INVOKESPECIAL org.springframework.util.ReflectionUtils$3.<init> ()V
    |               PUTSTATIC org.springframework.util.ReflectionUtils.USER_DECLARED_METHODS Lorg/springframework/util/ReflectionUtils$MethodFilter;
    |               RETURN   (line 45)
    staticinitialization(void org.springframework.util.ReflectionUtils.<clinit>())
  end static void <clinit>()

  public void <init>():
                    ALOAD_0     // Lorg/springframework/util/ReflectionUtils; this   (line 45)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.util.ReflectionUtils.<init>())
    |               RETURN
    constructor-execution(void org.springframework.util.ReflectionUtils.<init>())
  end public void <init>()

  public static java.lang.reflect.Field findField(Class, String):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 57)
                    ALOAD_1     // Ljava/lang/String; name
                    ACONST_NULL
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Field;
                    ARETURN
  end public static java.lang.reflect.Field findField(Class, String)

  public static java.lang.reflect.Field findField(Class, String, Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 70)
                    LDC "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name   (line 71)
                    IFNONNULL L0
                    ALOAD_2     // Ljava/lang/Class; type
                    IFNONNULL L0
                    ICONST_0
                    GOTO L1
                L0: ICONST_1
                L1: LDC "Either name or type of the field must be specified"
                    INVOKESTATIC org.springframework.util.Assert.isTrue (ZLjava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 72)
                    ASTORE_3
                    GOTO L8   (line 73)
                L2: ALOAD_3     // Ljava/lang/Class; searchType   (line 74)
                    INVOKEVIRTUAL java.lang.Class.getDeclaredFields ()[Ljava/lang/reflect/Field;
                    ASTORE 4
                    ALOAD 4     // [Ljava/lang/reflect/Field; fields   (line 75)
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L7
                L3: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ALOAD_1     // Ljava/lang/String; name   (line 76)
                    IFNULL L4
                    ALOAD_1     // Ljava/lang/String; name
                    ALOAD 5     // Ljava/lang/reflect/Field; field
                    INVOKEVIRTUAL java.lang.reflect.Field.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L6
                L4: ALOAD_2     // Ljava/lang/Class; type
                    IFNULL L5
                    ALOAD_2     // Ljava/lang/Class; type
                    ALOAD 5     // Ljava/lang/reflect/Field; field
                    INVOKEVIRTUAL java.lang.reflect.Field.getType ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L6
                L5: ALOAD 5     // Ljava/lang/reflect/Field; field   (line 77)
                    ARETURN
                L6: IINC 6 1   (line 75)
                L7: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L3
                    ALOAD_3     // Ljava/lang/Class; searchType   (line 80)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ASTORE_3     // Ljava/lang/Class; searchType
                L8: LDC java.lang.Object   (line 73)
                    ALOAD_3     // Ljava/lang/Class; searchType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L9
                    ALOAD_3     // Ljava/lang/Class; searchType
                    IFNONNULL L2
                L9: ACONST_NULL   (line 82)
                    ARETURN
  end public static java.lang.reflect.Field findField(Class, String, Class)

  public static void setField(java.lang.reflect.Field, Object, Object):
    catch java.lang.IllegalAccessException -> E0
    |               ALOAD_0     // Ljava/lang/reflect/Field; field   (line 97)
    |               ALOAD_1     // Ljava/lang/Object; target
    |               ALOAD_2     // Ljava/lang/Object; value
    |               INVOKEVIRTUAL java.lang.reflect.Field.set (Ljava/lang/Object;Ljava/lang/Object;)V
    catch java.lang.IllegalAccessException -> E0
                    GOTO L0
                E0: ASTORE_3   (line 99)
                    ALOAD_3     // Ljava/lang/IllegalAccessException; ex   (line 100)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleReflectionException (Ljava/lang/Exception;)V
                    NEW java.lang.IllegalStateException   (line 101)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC "Unexpected reflection exception - "
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_3     // Ljava/lang/IllegalAccessException; ex
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_3     // Ljava/lang/IllegalAccessException; ex   (line 102)
                    INVOKEVIRTUAL java.lang.IllegalAccessException.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V   (line 101)
                    ATHROW
                L0: RETURN   (line 104)
  end public static void setField(java.lang.reflect.Field, Object, Object)

  public static Object getField(java.lang.reflect.Field, Object):
    catch java.lang.IllegalAccessException -> E0
    |               ALOAD_0     // Ljava/lang/reflect/Field; field   (line 118)
    |               ALOAD_1     // Ljava/lang/Object; target
    |               INVOKEVIRTUAL java.lang.reflect.Field.get (Ljava/lang/Object;)Ljava/lang/Object;
    catch java.lang.IllegalAccessException -> E0
                    ARETURN
                E0: ASTORE_2   (line 120)
                    ALOAD_2     // Ljava/lang/IllegalAccessException; ex   (line 121)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleReflectionException (Ljava/lang/Exception;)V
                    NEW java.lang.IllegalStateException   (line 122)
                    DUP
                    NEW java.lang.StringBuilder   (line 123)
                    DUP
                    LDC "Unexpected reflection exception - "
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_2     // Ljava/lang/IllegalAccessException; ex
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_2     // Ljava/lang/IllegalAccessException; ex
                    INVOKEVIRTUAL java.lang.IllegalAccessException.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V   (line 122)
                    ATHROW
  end public static Object getField(java.lang.reflect.Field, Object)

  public static java.lang.reflect.Method findMethod(Class, String):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 136)
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_0
                    ANEWARRAY java.lang.Class
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findMethod (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
                    ARETURN
  end public static java.lang.reflect.Method findMethod(Class, String)

  public static transient java.lang.reflect.Method findMethod(Class, String, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 150)
                    LDC "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name   (line 151)
                    LDC "Method name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 152)
                    ASTORE_3
                    GOTO L7   (line 153)
                L0: ALOAD_3     // Ljava/lang/Class; searchType   (line 154)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFEQ L1
                    ALOAD_3     // Ljava/lang/Class; searchType
                    INVOKEVIRTUAL java.lang.Class.getMethods ()[Ljava/lang/reflect/Method;
                    GOTO L2
                L1: ALOAD_3     // Ljava/lang/Class; searchType
                    INVOKEVIRTUAL java.lang.Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;
                L2: ASTORE 4
                    ALOAD 4     // [Ljava/lang/reflect/Method; methods   (line 155)
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L6
                L3: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ALOAD_1     // Ljava/lang/String; name   (line 156)
                    ALOAD 5     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L5
                    ALOAD_2     // [Ljava/lang/Class; paramTypes   (line 157)
                    IFNULL L4
                    ALOAD_2     // [Ljava/lang/Class; paramTypes
                    ALOAD 5     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    INVOKESTATIC java.util.Arrays.equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z
                    IFEQ L5
                L4: ALOAD 5     // Ljava/lang/reflect/Method; method   (line 158)
                    ARETURN
                L5: IINC 6 1   (line 155)
                L6: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L3
                    ALOAD_3     // Ljava/lang/Class; searchType   (line 161)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ASTORE_3     // Ljava/lang/Class; searchType
                L7: ALOAD_3     // Ljava/lang/Class; searchType   (line 153)
                    IFNONNULL L0
                    ACONST_NULL   (line 163)
                    ARETURN
  end public static transient java.lang.reflect.Method findMethod(Class, String, Class[])

  public static Object invokeMethod(java.lang.reflect.Method, Object):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 176)
                    ALOAD_1     // Ljava/lang/Object; target
                    ICONST_0
                    ANEWARRAY java.lang.Object
                    INVOKESTATIC org.springframework.util.ReflectionUtils.invokeMethod (Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public static Object invokeMethod(java.lang.reflect.Method, Object)

  public static transient Object invokeMethod(java.lang.reflect.Method, Object, Object[]):
    catch java.lang.Exception -> E0
    |               ALOAD_0     // Ljava/lang/reflect/Method; method   (line 191)
    |               ALOAD_1     // Ljava/lang/Object; target
    |               ALOAD_2     // [Ljava/lang/Object; args
    |               INVOKEVIRTUAL java.lang.reflect.Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    catch java.lang.Exception -> E0
                    ARETURN
                E0: ASTORE_3   (line 193)
                    ALOAD_3     // Ljava/lang/Exception; ex   (line 194)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleReflectionException (Ljava/lang/Exception;)V
                    NEW java.lang.IllegalStateException   (line 196)
                    DUP
                    LDC "Should never get here"
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
  end public static transient Object invokeMethod(java.lang.reflect.Method, Object, Object[])

  public static Object invokeJdbcMethod(java.lang.reflect.Method, Object) throws java.sql.SQLException:
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 209)
                    ALOAD_1     // Ljava/lang/Object; target
                    ICONST_0
                    ANEWARRAY java.lang.Object
                    INVOKESTATIC org.springframework.util.ReflectionUtils.invokeJdbcMethod (Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public static Object invokeJdbcMethod(java.lang.reflect.Method, Object) throws java.sql.SQLException

  public static transient Object invokeJdbcMethod(java.lang.reflect.Method, Object, Object[]) throws java.sql.SQLException:
    catch java.lang.reflect.InvocationTargetException -> E1
    | catch java.lang.IllegalAccessException -> E0
    | |             ALOAD_0     // Ljava/lang/reflect/Method; method   (line 224)
    | |             ALOAD_1     // Ljava/lang/Object; target
    | |             ALOAD_2     // [Ljava/lang/Object; args
    | |             INVOKEVIRTUAL java.lang.reflect.Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    | catch java.lang.IllegalAccessException -> E0
    catch java.lang.reflect.InvocationTargetException -> E1
                    ARETURN
                E0: ASTORE_3   (line 226)
                    ALOAD_3     // Ljava/lang/IllegalAccessException; ex   (line 227)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleReflectionException (Ljava/lang/Exception;)V
                    GOTO L1
                E1: ASTORE_3   (line 229)
                    ALOAD_3     // Ljava/lang/reflect/InvocationTargetException; ex   (line 230)
                    INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
                    INSTANCEOF java.sql.SQLException
                    IFEQ L0
                    ALOAD_3     // Ljava/lang/reflect/InvocationTargetException; ex   (line 231)
                    INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
                    CHECKCAST java.sql.SQLException
                    ATHROW
                L0: ALOAD_3     // Ljava/lang/reflect/InvocationTargetException; ex   (line 233)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleInvocationTargetException (Ljava/lang/reflect/InvocationTargetException;)V
                L1: NEW java.lang.IllegalStateException   (line 235)
                    DUP
                    LDC "Should never get here"
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
  end public static transient Object invokeJdbcMethod(java.lang.reflect.Method, Object, Object[]) throws java.sql.SQLException

  public static void handleReflectionException(Exception):
                    ALOAD_0     // Ljava/lang/Exception; ex   (line 247)
                    INSTANCEOF java.lang.NoSuchMethodException
                    IFEQ L0
                    NEW java.lang.IllegalStateException   (line 248)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC "Method not found: "
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Exception; ex
                    INVOKEVIRTUAL java.lang.Exception.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_0     // Ljava/lang/Exception; ex   (line 250)
                    INSTANCEOF java.lang.IllegalAccessException
                    IFEQ L1
                    NEW java.lang.IllegalStateException   (line 251)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC "Could not access method: "
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Exception; ex
                    INVOKEVIRTUAL java.lang.Exception.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: ALOAD_0     // Ljava/lang/Exception; ex   (line 253)
                    INSTANCEOF java.lang.reflect.InvocationTargetException
                    IFEQ L2
                    ALOAD_0     // Ljava/lang/Exception; ex   (line 254)
                    CHECKCAST java.lang.reflect.InvocationTargetException
                    INVOKESTATIC org.springframework.util.ReflectionUtils.handleInvocationTargetException (Ljava/lang/reflect/InvocationTargetException;)V
                L2: ALOAD_0     // Ljava/lang/Exception; ex   (line 256)
                    INSTANCEOF java.lang.RuntimeException
                    IFEQ L3
                    ALOAD_0     // Ljava/lang/Exception; ex   (line 257)
                    CHECKCAST java.lang.RuntimeException
                    ATHROW
                L3: NEW java.lang.reflect.UndeclaredThrowableException   (line 259)
                    DUP
                    ALOAD_0     // Ljava/lang/Exception; ex
                    INVOKESPECIAL java.lang.reflect.UndeclaredThrowableException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
  end public static void handleReflectionException(Exception)

  public static void handleInvocationTargetException(java.lang.reflect.InvocationTargetException):
                    ALOAD_0     // Ljava/lang/reflect/InvocationTargetException; ex   (line 270)
                    INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.rethrowRuntimeException (Ljava/lang/Throwable;)V
                    RETURN   (line 271)
  end public static void handleInvocationTargetException(java.lang.reflect.InvocationTargetException)

  public static void rethrowRuntimeException(Throwable):
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 285)
                    INSTANCEOF java.lang.RuntimeException
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 286)
                    CHECKCAST java.lang.RuntimeException
                    ATHROW
                L0: ALOAD_0     // Ljava/lang/Throwable; ex   (line 288)
                    INSTANCEOF java.lang.Error
                    IFEQ L1
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 289)
                    CHECKCAST java.lang.Error
                    ATHROW
                L1: NEW java.lang.reflect.UndeclaredThrowableException   (line 291)
                    DUP
                    ALOAD_0     // Ljava/lang/Throwable; ex
                    INVOKESPECIAL java.lang.reflect.UndeclaredThrowableException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
  end public static void rethrowRuntimeException(Throwable)

  public static void rethrowException(Throwable) throws java.lang.Exception:
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 306)
                    INSTANCEOF java.lang.Exception
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 307)
                    CHECKCAST java.lang.Exception
                    ATHROW
                L0: ALOAD_0     // Ljava/lang/Throwable; ex   (line 309)
                    INSTANCEOF java.lang.Error
                    IFEQ L1
                    ALOAD_0     // Ljava/lang/Throwable; ex   (line 310)
                    CHECKCAST java.lang.Error
                    ATHROW
                L1: NEW java.lang.reflect.UndeclaredThrowableException   (line 312)
                    DUP
                    ALOAD_0     // Ljava/lang/Throwable; ex
                    INVOKESPECIAL java.lang.reflect.UndeclaredThrowableException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
  end public static void rethrowException(Throwable) throws java.lang.Exception

  public static boolean declaresException(java.lang.reflect.Method, Class):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 325)
                    LDC "Method must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 326)
                    INVOKEVIRTUAL java.lang.reflect.Method.getExceptionTypes ()[Ljava/lang/Class;
                    ASTORE_2
                    ALOAD_2     // [Ljava/lang/Class; declaredExceptions   (line 327)
                    DUP
                    ASTORE 6
                    ARRAYLENGTH
                    ISTORE 5
                    ICONST_0
                    ISTORE 4
                    GOTO L2
                L0: ALOAD 6
                    ILOAD 4
                    AALOAD
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/Class; declaredException   (line 328)
                    ALOAD_1     // Ljava/lang/Class; exceptionType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFEQ L1
                    ICONST_1   (line 329)
                    IRETURN
                L1: IINC 4 1   (line 327)
                L2: ILOAD 4
                    ILOAD 5
                    IF_ICMPLT L0
                    ICONST_0   (line 332)
                    IRETURN
  end public static boolean declaresException(java.lang.reflect.Method, Class)

  public static boolean isPublicStaticFinal(java.lang.reflect.Field):
                    ALOAD_0     // Ljava/lang/reflect/Field; field   (line 340)
                    INVOKEVIRTUAL java.lang.reflect.Field.getModifiers ()I
                    ISTORE_1
                    ILOAD_1     // I modifiers   (line 341)
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFEQ L0
                    ILOAD_1     // I modifiers
                    INVOKESTATIC java.lang.reflect.Modifier.isStatic (I)Z
                    IFEQ L0
                    ILOAD_1     // I modifiers
                    INVOKESTATIC java.lang.reflect.Modifier.isFinal (I)Z
                    IFEQ L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean isPublicStaticFinal(java.lang.reflect.Field)

  public static boolean isEqualsMethod(java.lang.reflect.Method):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 349)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC_W "equals"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L1
                L0: ICONST_0   (line 350)
                    IRETURN
                L1: ALOAD_0     // Ljava/lang/reflect/Method; method   (line 352)
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ASTORE_1
                    ALOAD_1     // [Ljava/lang/Class; paramTypes   (line 353)
                    ARRAYLENGTH
                    ICONST_1
                    IF_ICMPNE L2
                    ALOAD_1     // [Ljava/lang/Class; paramTypes
                    ICONST_0
                    AALOAD
                    LDC java.lang.Object
                    IF_ACMPNE L2
                    ICONST_1
                    IRETURN
                L2: ICONST_0
                    IRETURN
  end public static boolean isEqualsMethod(java.lang.reflect.Method)

  public static boolean isHashCodeMethod(java.lang.reflect.Method):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 361)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC_W "hashCode"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ARRAYLENGTH
                    IFNE L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean isHashCodeMethod(java.lang.reflect.Method)

  public static boolean isToStringMethod(java.lang.reflect.Method):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 369)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC_W "toString"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ARRAYLENGTH
                    IFNE L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean isToStringMethod(java.lang.reflect.Method)

  public static boolean isObjectMethod(java.lang.reflect.Method):
    catch java.lang.NoSuchMethodException -> E1
    | catch java.lang.SecurityException -> E0
    | |             LDC java.lang.Object   (line 377)
    | |             ALOAD_0     // Ljava/lang/reflect/Method; method
    | |             INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
    | |             ALOAD_0     // Ljava/lang/reflect/Method; method
    | |             INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
    | |             INVOKEVIRTUAL java.lang.Class.getDeclaredMethod (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    | |             POP
    | catch java.lang.SecurityException -> E0
    catch java.lang.NoSuchMethodException -> E1
                    ICONST_1   (line 378)
                    IRETURN
                E0: POP   (line 379)
                    ICONST_0   (line 380)
                    IRETURN
                E1: POP   (line 381)
                    ICONST_0   (line 382)
                    IRETURN
  end public static boolean isObjectMethod(java.lang.reflect.Method)

  public static boolean isCglibRenamedMethod(java.lang.reflect.Method):
                    GETSTATIC org.springframework.util.ReflectionUtils.CGLIB_RENAMED_METHOD_PATTERN Ljava/util/regex/Pattern;   (line 393)
                    ALOAD_0     // Ljava/lang/reflect/Method; renamedMethod
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.util.regex.Pattern.matcher (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
                    INVOKEVIRTUAL java.util.regex.Matcher.matches ()Z
                    IRETURN
  end public static boolean isCglibRenamedMethod(java.lang.reflect.Method)

  public static void makeAccessible(java.lang.reflect.Field):
                    ALOAD_0     // Ljava/lang/reflect/Field; field   (line 405)
                    INVOKEVIRTUAL java.lang.reflect.Field.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Field; field
                    INVOKEVIRTUAL java.lang.reflect.Field.getDeclaringClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Field; field   (line 406)
                    INVOKEVIRTUAL java.lang.reflect.Field.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isFinal (I)Z
                    IFEQ L1
                L0: ALOAD_0     // Ljava/lang/reflect/Field; field
                    INVOKEVIRTUAL java.lang.reflect.Field.isAccessible ()Z
                    IFNE L1
                    ALOAD_0     // Ljava/lang/reflect/Field; field   (line 407)
                    ICONST_1
                    INVOKEVIRTUAL java.lang.reflect.Field.setAccessible (Z)V
                L1: RETURN   (line 409)
  end public static void makeAccessible(java.lang.reflect.Field)

  public static void makeAccessible(java.lang.reflect.Method):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 420)
                    INVOKEVIRTUAL java.lang.reflect.Method.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFNE L1
                L0: ALOAD_0     // Ljava/lang/reflect/Method; method   (line 421)
                    INVOKEVIRTUAL java.lang.reflect.Method.isAccessible ()Z
                    IFNE L1
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 422)
                    ICONST_1
                    INVOKEVIRTUAL java.lang.reflect.Method.setAccessible (Z)V
                L1: RETURN   (line 424)
  end public static void makeAccessible(java.lang.reflect.Method)

  public static void makeAccessible(java.lang.reflect.Constructor):
                    ALOAD_0     // Ljava/lang/reflect/Constructor; ctor   (line 435)
                    INVOKEVIRTUAL java.lang.reflect.Constructor.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/reflect/Constructor; ctor
                    INVOKEVIRTUAL java.lang.reflect.Constructor.getDeclaringClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFNE L1
                L0: ALOAD_0     // Ljava/lang/reflect/Constructor; ctor   (line 436)
                    INVOKEVIRTUAL java.lang.reflect.Constructor.isAccessible ()Z
                    IFNE L1
                    ALOAD_0     // Ljava/lang/reflect/Constructor; ctor   (line 437)
                    ICONST_1
                    INVOKEVIRTUAL java.lang.reflect.Constructor.setAccessible (Z)V
                L1: RETURN   (line 439)
  end public static void makeAccessible(java.lang.reflect.Constructor)

  public static void doWithMethods(Class, org.springframework.util.ReflectionUtils$MethodCallback) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 451)
                    ALOAD_1     // Lorg/springframework/util/ReflectionUtils$MethodCallback; mc
                    ACONST_NULL
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithMethods (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
                    RETURN   (line 452)
  end public static void doWithMethods(Class, org.springframework.util.ReflectionUtils$MethodCallback) throws java.lang.IllegalArgumentException

  public static void doWithMethods(Class, org.springframework.util.ReflectionUtils$MethodCallback, org.springframework.util.ReflectionUtils$MethodFilter) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 467)
                    INVOKEVIRTUAL java.lang.Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;
                    ASTORE_3
                    ALOAD_3     // [Ljava/lang/reflect/Method; methods   (line 468)
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L3
                L0: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$MethodFilter; mf   (line 469)
                    IFNULL L1
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$MethodFilter; mf
                    ALOAD 4     // Ljava/lang/reflect/Method; method
                    INVOKEINTERFACE org.springframework.util.ReflectionUtils$MethodFilter.matches (Ljava/lang/reflect/Method;)Z
                    IFNE L1
                    GOTO L2   (line 470)
    catch java.lang.IllegalAccessException -> E0
    |           L1: ALOAD_1     // Lorg/springframework/util/ReflectionUtils$MethodCallback; mc   (line 473)
    |               ALOAD 4     // Ljava/lang/reflect/Method; method
    |               INVOKEINTERFACE org.springframework.util.ReflectionUtils$MethodCallback.doWith (Ljava/lang/reflect/Method;)V
    catch java.lang.IllegalAccessException -> E0
                    GOTO L2
                E0: ASTORE 8   (line 475)
                    NEW java.lang.IllegalStateException   (line 476)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC_W "Shouldn't be illegal to access method '"
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD 4     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "': "   (line 477)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD 8     // Ljava/lang/IllegalAccessException; ex
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V   (line 476)
                    ATHROW
                L2: IINC 5 1   (line 468)
                L3: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 480)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    IFNULL L4
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 481)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ALOAD_1     // Lorg/springframework/util/ReflectionUtils$MethodCallback; mc
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$MethodFilter; mf
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithMethods (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
                    GOTO L7
                L4: ALOAD_0     // Ljava/lang/Class; clazz   (line 483)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFEQ L7
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 484)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L6
                L5: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; superIfc   (line 485)
                    ALOAD_1     // Lorg/springframework/util/ReflectionUtils$MethodCallback; mc
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$MethodFilter; mf
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithMethods (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
                    IINC 5 1   (line 484)
                L6: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L5
                L7: RETURN   (line 488)
  end public static void doWithMethods(Class, org.springframework.util.ReflectionUtils$MethodCallback, org.springframework.util.ReflectionUtils$MethodFilter) throws java.lang.IllegalArgumentException

  public static java.lang.reflect.Method[] getAllDeclaredMethods(Class) throws java.lang.IllegalArgumentException:
                    NEW java.util.ArrayList   (line 495)
                    DUP
                    BIPUSH 32
                    INVOKESPECIAL java.util.ArrayList.<init> (I)V
                    ASTORE_1
                    ALOAD_0     // Ljava/lang/Class; leafClass   (line 496)
                    NEW org.springframework.util.ReflectionUtils$4
                    DUP
                    ALOAD_1     // Ljava/util/List; methods
                    INVOKESPECIAL org.springframework.util.ReflectionUtils$4.<init> (Ljava/util/List;)V
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithMethods (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
                    ALOAD_1     // Ljava/util/List; methods   (line 501)
                    ALOAD_1     // Ljava/util/List; methods
                    INVOKEINTERFACE java.util.List.size ()I
                    ANEWARRAY java.lang.reflect.Method
                    INVOKEINTERFACE java.util.List.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    CHECKCAST [Ljava.lang.reflect.Method;
                    ARETURN
  end public static java.lang.reflect.Method[] getAllDeclaredMethods(Class) throws java.lang.IllegalArgumentException

  public static java.lang.reflect.Method[] getUniqueDeclaredMethods(Class) throws java.lang.IllegalArgumentException:
                    NEW java.util.ArrayList   (line 510)
                    DUP
                    BIPUSH 32
                    INVOKESPECIAL java.util.ArrayList.<init> (I)V
                    ASTORE_1
                    ALOAD_0     // Ljava/lang/Class; leafClass   (line 511)
                    NEW org.springframework.util.ReflectionUtils$5
                    DUP
                    ALOAD_1     // Ljava/util/List; methods
                    INVOKESPECIAL org.springframework.util.ReflectionUtils$5.<init> (Ljava/util/List;)V
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithMethods (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
                    ALOAD_1     // Ljava/util/List; methods   (line 537)
                    ALOAD_1     // Ljava/util/List; methods
                    INVOKEINTERFACE java.util.List.size ()I
                    ANEWARRAY java.lang.reflect.Method
                    INVOKEINTERFACE java.util.List.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    CHECKCAST [Ljava.lang.reflect.Method;
                    ARETURN
  end public static java.lang.reflect.Method[] getUniqueDeclaredMethods(Class) throws java.lang.IllegalArgumentException

  public static void doWithFields(Class, org.springframework.util.ReflectionUtils$FieldCallback) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 547)
                    ALOAD_1     // Lorg/springframework/util/ReflectionUtils$FieldCallback; fc
                    ACONST_NULL
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithFields (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
                    RETURN   (line 548)
  end public static void doWithFields(Class, org.springframework.util.ReflectionUtils$FieldCallback) throws java.lang.IllegalArgumentException

  public static void doWithFields(Class, org.springframework.util.ReflectionUtils$FieldCallback, org.springframework.util.ReflectionUtils$FieldFilter) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 561)
                    ASTORE_3
                L0: ALOAD_3     // Ljava/lang/Class; targetClass   (line 563)
                    INVOKEVIRTUAL java.lang.Class.getDeclaredFields ()[Ljava/lang/reflect/Field;
                    ASTORE 4
                    ALOAD 4     // [Ljava/lang/reflect/Field; fields   (line 564)
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L4
                L1: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$FieldFilter; ff   (line 566)
                    IFNULL L2
                    ALOAD_2     // Lorg/springframework/util/ReflectionUtils$FieldFilter; ff
                    ALOAD 5     // Ljava/lang/reflect/Field; field
                    INVOKEINTERFACE org.springframework.util.ReflectionUtils$FieldFilter.matches (Ljava/lang/reflect/Field;)Z
                    IFNE L2
                    GOTO L3   (line 567)
    catch java.lang.IllegalAccessException -> E0
    |           L2: ALOAD_1     // Lorg/springframework/util/ReflectionUtils$FieldCallback; fc   (line 570)
    |               ALOAD 5     // Ljava/lang/reflect/Field; field
    |               INVOKEINTERFACE org.springframework.util.ReflectionUtils$FieldCallback.doWith (Ljava/lang/reflect/Field;)V
    catch java.lang.IllegalAccessException -> E0
                    GOTO L3
                E0: ASTORE 9   (line 572)
                    NEW java.lang.IllegalStateException   (line 573)
                    DUP
                    NEW java.lang.StringBuilder   (line 574)
                    DUP
                    LDC_W "Shouldn't be illegal to access field '"
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD 5     // Ljava/lang/reflect/Field; field
                    INVOKEVIRTUAL java.lang.reflect.Field.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "': "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD 9     // Ljava/lang/IllegalAccessException; ex
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V   (line 573)
                    ATHROW
                L3: IINC 6 1   (line 564)
                L4: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L1
                    ALOAD_3     // Ljava/lang/Class; targetClass   (line 577)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ASTORE_3     // Ljava/lang/Class; targetClass
                    ALOAD_3     // Ljava/lang/Class; targetClass   (line 579)
                    IFNULL L5
                    ALOAD_3     // Ljava/lang/Class; targetClass
                    LDC java.lang.Object
                    IF_ACMPNE L0
                L5: RETURN   (line 580)
  end public static void doWithFields(Class, org.springframework.util.ReflectionUtils$FieldCallback, org.springframework.util.ReflectionUtils$FieldFilter) throws java.lang.IllegalArgumentException

  public static void shallowCopyFieldState(Object, Object) throws java.lang.IllegalArgumentException:
                    ALOAD_0     // Ljava/lang/Object; src   (line 589)
                    IFNONNULL L0
                    NEW java.lang.IllegalArgumentException   (line 590)
                    DUP
                    LDC_W "Source for field copy cannot be null"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_1     // Ljava/lang/Object; dest   (line 592)
                    IFNONNULL L1
                    NEW java.lang.IllegalArgumentException   (line 593)
                    DUP
                    LDC_W "Destination for field copy cannot be null"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: ALOAD_0     // Ljava/lang/Object; src   (line 595)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ALOAD_1     // Ljava/lang/Object; dest
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFNE L2
                    NEW java.lang.IllegalArgumentException   (line 596)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC_W "Destination class ["
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/Object; dest
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "] must be same or subclass as source class ["   (line 597)
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/Object; src
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V   (line 596)
                    ATHROW
                L2: ALOAD_0     // Ljava/lang/Object; src   (line 599)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    NEW org.springframework.util.ReflectionUtils$6
                    DUP
                    ALOAD_0     // Ljava/lang/Object; src
                    ALOAD_1     // Ljava/lang/Object; dest
                    INVOKESPECIAL org.springframework.util.ReflectionUtils$6.<init> (Ljava/lang/Object;Ljava/lang/Object;)V
                    GETSTATIC org.springframework.util.ReflectionUtils.COPYABLE_FIELDS Lorg/springframework/util/ReflectionUtils$FieldFilter;   (line 605)
                    INVOKESTATIC org.springframework.util.ReflectionUtils.doWithFields (Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V   (line 599)
                    RETURN   (line 606)
  end public static void shallowCopyFieldState(Object, Object) throws java.lang.IllegalArgumentException
end public abstract class org.springframework.util.ReflectionUtils
 -- (NullPointerException) null
null
java.lang.NullPointerException

debug weaving 'org.springframework.util.ReflectionUtils$FieldCallback'
---- org.aspectj.weaver.ltw.LTWWorld@28c97a5 ----
Class loader:
sun.misc.Launcher$AppClassLoader@18b4aac2
Class loader parent:
sun.misc.Launcher$ExtClassLoader@722c41f4
Shadow mungers:
(around(extraFlags: 3): ((((((((((within(@org.springframework.cache.annotation.CacheEvict *) && execution(public * @org.springframework.cache.annotation.CacheEvict *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)) || (((within(@org.springframework.cache.annotation.Caching *) && execution(public * @org.springframework.cache.annotation.Caching *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.CachePut *) && execution(public * @org.springframework.cache.annotation.CachePut *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.Cacheable *) && execution(public * @org.springframework.cache.annotation.Cacheable *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Caching * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Cacheable * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CacheEvict * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CachePut * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)))->java.lang.Object org.springframework.cache.aspectj.AbstractCacheAspect.ajc$around$org_springframework_cache_aspectj_AbstractCacheAspect$1$2bc714b5(java.lang.Object, org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint))
(around(extraFlags: 5): ((execution(@org.springframework.scheduling.annotation.Async (void || java.util.concurrent.Future+) *(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)) || (execution((void || java.util.concurrent.Future+) @org.springframework.scheduling.annotation.Async *.*(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)))->java.lang.Object org.springframework.scheduling.aspectj.AbstractAsyncExecutionAspect.ajc$around$org_springframework_scheduling_aspectj_AbstractAsyncExecutionAspect$1$6c004c3e(org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint$StaticPart))
org.aspectj.weaver.Checker@5abff562
org.aspectj.weaver.Checker@12140c1d
(before(extraFlags: 4): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$before$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96c(java.lang.Object, org.aspectj.lang.JoinPoint$StaticPart))
(afterThrowing(extraFlags: 1): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterThrowing$org_springframework_transaction_aspectj_AbstractTransactionAspect$2$2a73e96c(java.lang.Object, java.lang.Throwable))
(afterReturning: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterReturning$org_springframework_transaction_aspectj_AbstractTransactionAspect$3$2a73e96c(java.lang.Object))
(after: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$after$org_springframework_transaction_aspectj_AbstractTransactionAspect$4$2a73e96c(java.lang.Object))
(before: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject.new(..)) && initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..))) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65(java.lang.Object))
(afterReturning: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..)) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && !(@this(org.springframework.beans.factory.annotation.Configurable) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable)))) && if(boolean org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$if$6f1(org.aspectj.lang.JoinPoint))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c(java.lang.Object))
(afterReturning: (((execution(java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport+.readResolve()) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052(java.lang.Object))
Type mungers:
(BcelTypeMunger ResolvedTypeMunger(Method, java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport.readResolve()))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.ConfigurableObject))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport))
Late Type mungers:
Empty
