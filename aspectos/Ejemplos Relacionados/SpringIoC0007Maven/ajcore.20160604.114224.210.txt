---- AspectJ Properties ---
AspectJ Compiler 1.6.2 built on Saturday Oct 4, 2008 at 05:47:07 GMT
---- Dump Properties ---
Dump file: ajcore.20160604.114224.210.txt
Dump reason: org.aspectj.bridge.AbortException
Dump on exception: true
Dump at exit condition: abort
---- Exception Information ---
Message: abort trouble in: 
public final class org.springframework.core.convert.Property extends java.lang.Object:
  private final Class objectType [Signature(Ljava/lang/Class<*>;)]
  private final java.lang.reflect.Method readMethod
  private final java.lang.reflect.Method writeMethod
  private final String name
  private final org.springframework.core.MethodParameter methodParameter
  private final java.lang.annotation.Annotation[] annotations
  public void <init>(Class, java.lang.reflect.Method, java.lang.reflect.Method):
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 59)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.core.convert.Property.<init>(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method))
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 60)
    |               ALOAD_1     // Ljava/lang/Class; objectType
    |               PUTFIELD org.springframework.core.convert.Property.objectType Ljava/lang/Class;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 61)
    |               ALOAD_2     // Ljava/lang/reflect/Method; readMethod
    |               PUTFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 62)
    |               ALOAD_3     // Ljava/lang/reflect/Method; writeMethod
    |               PUTFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 63)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveMethodParameter ()Lorg/springframework/core/MethodParameter;
    |               PUTFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 64)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveName ()Ljava/lang/String;
    |               PUTFIELD org.springframework.core.convert.Property.name Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 65)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveAnnotations ()[Ljava/lang/annotation/Annotation;
    |               PUTFIELD org.springframework.core.convert.Property.annotations [Ljava/lang/annotation/Annotation;
    |               RETURN   (line 66)
    constructor-execution(void org.springframework.core.convert.Property.<init>(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method))
  end public void <init>(Class, java.lang.reflect.Method, java.lang.reflect.Method)

  public Class getObjectType():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 73)
                    GETFIELD org.springframework.core.convert.Property.objectType Ljava/lang/Class;
                    ARETURN
  end public Class getObjectType()

  public String getName():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 80)
                    GETFIELD org.springframework.core.convert.Property.name Ljava/lang/String;
                    ARETURN
  end public String getName()

  public Class getType():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 87)
                    GETFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ARETURN
  end public Class getType()

  public java.lang.reflect.Method getReadMethod():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 94)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    ARETURN
  end public java.lang.reflect.Method getReadMethod()

  public java.lang.reflect.Method getWriteMethod():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 101)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    ARETURN
  end public java.lang.reflect.Method getWriteMethod()

  org.springframework.core.MethodParameter getMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 108)
                    GETFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
                    ARETURN
  end org.springframework.core.MethodParameter getMethodParameter()

  java.lang.annotation.Annotation[] getAnnotations():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 112)
                    GETFIELD org.springframework.core.convert.Property.annotations [Ljava/lang/annotation/Annotation;
                    ARETURN
  end java.lang.annotation.Annotation[] getAnnotations()

  private String resolveName():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 119)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    IFNULL L3
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 120)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "get"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ISTORE_1
                    ILOAD_1     // I index   (line 121)
                    ICONST_M1
                    IF_ICMPEQ L0
                    IINC_1 3     // I index   (line 122)
                    GOTO L2
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 125)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "is"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ISTORE_1     // I index
                    ILOAD_1     // I index   (line 126)
                    ICONST_M1
                    IF_ICMPNE L1
                    NEW java.lang.IllegalArgumentException   (line 127)
                    DUP
                    LDC "Not a getter method"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: IINC_1 2     // I index   (line 129)
                L2: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 131)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ILOAD_1     // I index
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.uncapitalize (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
                L3: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 134)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "set"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ICONST_3
                    IADD
                    ISTORE_1
                    ILOAD_1     // I index   (line 135)
                    ICONST_M1
                    IF_ICMPNE L4
                    NEW java.lang.IllegalArgumentException   (line 136)
                    DUP
                    LDC "Not a setter method"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L4: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 138)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ILOAD_1     // I index
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.uncapitalize (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
  end private String resolveName()

  private org.springframework.core.MethodParameter resolveMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 143)
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveReadMethodParameter ()Lorg/springframework/core/MethodParameter;
                    ASTORE_1
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 144)
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveWriteMethodParameter ()Lorg/springframework/core/MethodParameter;
                    ASTORE_2
                    ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 145)
                    IFNONNULL L1
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 146)
                    IFNONNULL L0
                    NEW java.lang.IllegalStateException   (line 147)
                    DUP
                    LDC "Property is neither readable nor writeable"
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 149)
                    ARETURN
                L1: ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 151)
                    IFNULL L2
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 152)
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ASTORE_3
                    ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 153)
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; writeType   (line 154)
                    ALOAD_3     // Ljava/lang/Class; readType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L2
                    ALOAD 4     // Ljava/lang/Class; writeType
                    ALOAD_3     // Ljava/lang/Class; readType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFEQ L2
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 155)
                    ARETURN
                L2: ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 158)
                    ARETURN
  end private org.springframework.core.MethodParameter resolveMethodParameter()

  private org.springframework.core.MethodParameter resolveReadMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 162)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    IFNONNULL L0
                    ACONST_NULL   (line 163)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 165)
                    NEW org.springframework.core.MethodParameter
                    DUP
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    ICONST_M1
                    INVOKESPECIAL org.springframework.core.MethodParameter.<init> (Ljava/lang/reflect/Method;I)V
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveParameterType (Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/MethodParameter;
                    ARETURN
  end private org.springframework.core.MethodParameter resolveReadMethodParameter()

  private org.springframework.core.MethodParameter resolveWriteMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 169)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    IFNONNULL L0
                    ACONST_NULL   (line 170)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 172)
                    NEW org.springframework.core.MethodParameter
                    DUP
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    ICONST_0
                    INVOKESPECIAL org.springframework.core.MethodParameter.<init> (Ljava/lang/reflect/Method;I)V
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveParameterType (Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/MethodParameter;
                    ARETURN
  end private org.springframework.core.MethodParameter resolveWriteMethodParameter()

  private org.springframework.core.MethodParameter resolveParameterType(org.springframework.core.MethodParameter):
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; parameter   (line 177)
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getObjectType ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.core.GenericTypeResolver.resolveParameterType (Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;
                    POP
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; parameter   (line 178)
                    ARETURN
  end private org.springframework.core.MethodParameter resolveParameterType(org.springframework.core.MethodParameter)

  private java.lang.annotation.Annotation[] resolveAnnotations():
                    NEW java.util.LinkedHashMap   (line 182)
                    DUP
                    INVOKESPECIAL java.util.LinkedHashMap.<init> ()V
                    ASTORE_1
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 183)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/reflect/Method; readMethod   (line 184)
                    IFNULL L2
                    ALOAD_2     // Ljava/lang/reflect/Method; readMethod   (line 185)
                    INVOKEVIRTUAL java.lang.reflect.Method.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 6
                    ARRAYLENGTH
                    ISTORE 5
                    ICONST_0
                    ISTORE 4
                    GOTO L1
                L0: ALOAD 6
                    ILOAD 4
                    AALOAD
                    ASTORE_3
                    ALOAD_1     // Ljava/util/Map; annMap   (line 186)
                    ALOAD_3     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD_3     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 4 1   (line 185)
                L1: ILOAD 4
                    ILOAD 5
                    IF_ICMPLT L0
                L2: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 189)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/reflect/Method; writeMethod   (line 190)
                    IFNULL L5
                    ALOAD_3     // Ljava/lang/reflect/Method; writeMethod   (line 191)
                    INVOKEVIRTUAL java.lang.reflect.Method.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L4
                L3: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD_1     // Ljava/util/Map; annMap   (line 192)
                    ALOAD 4     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD 4     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 5 1   (line 191)
                L4: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L3
                L5: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 195)
                    INVOKESPECIAL org.springframework.core.convert.Property.getField ()Ljava/lang/reflect/Field;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/reflect/Field; field   (line 196)
                    IFNULL L8
                    ALOAD 4     // Ljava/lang/reflect/Field; field   (line 197)
                    INVOKEVIRTUAL java.lang.reflect.Field.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L7
                L6: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ALOAD_1     // Ljava/util/Map; annMap   (line 198)
                    ALOAD 5     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD 5     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 6 1   (line 197)
                L7: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L6
                L8: ALOAD_1     // Ljava/util/Map; annMap   (line 201)
                    INVOKEINTERFACE java.util.Map.values ()Ljava/util/Collection;
                    ALOAD_1     // Ljava/util/Map; annMap
                    INVOKEINTERFACE java.util.Map.size ()I
                    ANEWARRAY java.lang.annotation.Annotation
                    INVOKEINTERFACE java.util.Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    CHECKCAST [Ljava.lang.annotation.Annotation;
                    ARETURN
  end private java.lang.annotation.Annotation[] resolveAnnotations()

  private java.lang.reflect.Field getField():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 205)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getName ()Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; name   (line 206)
                    INVOKESTATIC org.springframework.util.StringUtils.hasLength (Ljava/lang/String;)Z
                    IFNE L0
                    ACONST_NULL   (line 207)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 209)
                    INVOKESPECIAL org.springframework.core.convert.Property.declaringClass ()Ljava/lang/Class;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 210)
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/reflect/Field; field   (line 211)
                    IFNONNULL L1
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 213)
                    NEW java.lang.StringBuilder   (line 214)
                    DUP
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_0
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.toLowerCase ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;   (line 213)
                    ASTORE_3     // Ljava/lang/reflect/Field; field
                    ALOAD_3     // Ljava/lang/reflect/Field; field   (line 215)
                    IFNONNULL L1
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 216)
                    NEW java.lang.StringBuilder   (line 217)
                    DUP
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_0
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.toUpperCase ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;   (line 216)
                    ASTORE_3     // Ljava/lang/reflect/Field; field
                L1: ALOAD_3     // Ljava/lang/reflect/Field; field   (line 220)
                    ARETURN
  end private java.lang.reflect.Field getField()

  private Class declaringClass():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 224)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    IFNULL L0
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 225)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 228)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    ARETURN
  end private Class declaringClass()

end public final class org.springframework.core.convert.Property
 -- (NullPointerException) null
null
java.lang.NullPointerException

org.aspectj.bridge.AbortException: trouble in: 
public final class org.springframework.core.convert.Property extends java.lang.Object:
  private final Class objectType [Signature(Ljava/lang/Class<*>;)]
  private final java.lang.reflect.Method readMethod
  private final java.lang.reflect.Method writeMethod
  private final String name
  private final org.springframework.core.MethodParameter methodParameter
  private final java.lang.annotation.Annotation[] annotations
  public void <init>(Class, java.lang.reflect.Method, java.lang.reflect.Method):
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 59)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.core.convert.Property.<init>(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method))
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 60)
    |               ALOAD_1     // Ljava/lang/Class; objectType
    |               PUTFIELD org.springframework.core.convert.Property.objectType Ljava/lang/Class;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 61)
    |               ALOAD_2     // Ljava/lang/reflect/Method; readMethod
    |               PUTFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 62)
    |               ALOAD_3     // Ljava/lang/reflect/Method; writeMethod
    |               PUTFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 63)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveMethodParameter ()Lorg/springframework/core/MethodParameter;
    |               PUTFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 64)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveName ()Ljava/lang/String;
    |               PUTFIELD org.springframework.core.convert.Property.name Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 65)
    |               ALOAD_0     // Lorg/springframework/core/convert/Property; this
    |               INVOKESPECIAL org.springframework.core.convert.Property.resolveAnnotations ()[Ljava/lang/annotation/Annotation;
    |               PUTFIELD org.springframework.core.convert.Property.annotations [Ljava/lang/annotation/Annotation;
    |               RETURN   (line 66)
    constructor-execution(void org.springframework.core.convert.Property.<init>(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method))
  end public void <init>(Class, java.lang.reflect.Method, java.lang.reflect.Method)

  public Class getObjectType():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 73)
                    GETFIELD org.springframework.core.convert.Property.objectType Ljava/lang/Class;
                    ARETURN
  end public Class getObjectType()

  public String getName():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 80)
                    GETFIELD org.springframework.core.convert.Property.name Ljava/lang/String;
                    ARETURN
  end public String getName()

  public Class getType():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 87)
                    GETFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ARETURN
  end public Class getType()

  public java.lang.reflect.Method getReadMethod():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 94)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    ARETURN
  end public java.lang.reflect.Method getReadMethod()

  public java.lang.reflect.Method getWriteMethod():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 101)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    ARETURN
  end public java.lang.reflect.Method getWriteMethod()

  org.springframework.core.MethodParameter getMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 108)
                    GETFIELD org.springframework.core.convert.Property.methodParameter Lorg/springframework/core/MethodParameter;
                    ARETURN
  end org.springframework.core.MethodParameter getMethodParameter()

  java.lang.annotation.Annotation[] getAnnotations():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 112)
                    GETFIELD org.springframework.core.convert.Property.annotations [Ljava/lang/annotation/Annotation;
                    ARETURN
  end java.lang.annotation.Annotation[] getAnnotations()

  private String resolveName():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 119)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    IFNULL L3
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 120)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "get"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ISTORE_1
                    ILOAD_1     // I index   (line 121)
                    ICONST_M1
                    IF_ICMPEQ L0
                    IINC_1 3     // I index   (line 122)
                    GOTO L2
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 125)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "is"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ISTORE_1     // I index
                    ILOAD_1     // I index   (line 126)
                    ICONST_M1
                    IF_ICMPNE L1
                    NEW java.lang.IllegalArgumentException   (line 127)
                    DUP
                    LDC "Not a getter method"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: IINC_1 2     // I index   (line 129)
                L2: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 131)
                    GETFIELD org.springframework.core.convert.Property.readMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ILOAD_1     // I index
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.uncapitalize (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
                L3: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 134)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    LDC "set"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ICONST_3
                    IADD
                    ISTORE_1
                    ILOAD_1     // I index   (line 135)
                    ICONST_M1
                    IF_ICMPNE L4
                    NEW java.lang.IllegalArgumentException   (line 136)
                    DUP
                    LDC "Not a setter method"
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;)V
                    ATHROW
                L4: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 138)
                    GETFIELD org.springframework.core.convert.Property.writeMethod Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ILOAD_1     // I index
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.StringUtils.uncapitalize (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
  end private String resolveName()

  private org.springframework.core.MethodParameter resolveMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 143)
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveReadMethodParameter ()Lorg/springframework/core/MethodParameter;
                    ASTORE_1
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 144)
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveWriteMethodParameter ()Lorg/springframework/core/MethodParameter;
                    ASTORE_2
                    ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 145)
                    IFNONNULL L1
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 146)
                    IFNONNULL L0
                    NEW java.lang.IllegalStateException   (line 147)
                    DUP
                    LDC "Property is neither readable nor writeable"
                    INVOKESPECIAL java.lang.IllegalStateException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 149)
                    ARETURN
                L1: ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 151)
                    IFNULL L2
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 152)
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ASTORE_3
                    ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 153)
                    INVOKEVIRTUAL org.springframework.core.MethodParameter.getParameterType ()Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; writeType   (line 154)
                    ALOAD_3     // Ljava/lang/Class; readType
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L2
                    ALOAD 4     // Ljava/lang/Class; writeType
                    ALOAD_3     // Ljava/lang/Class; readType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFEQ L2
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; read   (line 155)
                    ARETURN
                L2: ALOAD_2     // Lorg/springframework/core/MethodParameter; write   (line 158)
                    ARETURN
  end private org.springframework.core.MethodParameter resolveMethodParameter()

  private org.springframework.core.MethodParameter resolveReadMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 162)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    IFNONNULL L0
                    ACONST_NULL   (line 163)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 165)
                    NEW org.springframework.core.MethodParameter
                    DUP
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    ICONST_M1
                    INVOKESPECIAL org.springframework.core.MethodParameter.<init> (Ljava/lang/reflect/Method;I)V
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveParameterType (Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/MethodParameter;
                    ARETURN
  end private org.springframework.core.MethodParameter resolveReadMethodParameter()

  private org.springframework.core.MethodParameter resolveWriteMethodParameter():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 169)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    IFNONNULL L0
                    ACONST_NULL   (line 170)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 172)
                    NEW org.springframework.core.MethodParameter
                    DUP
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    ICONST_0
                    INVOKESPECIAL org.springframework.core.MethodParameter.<init> (Ljava/lang/reflect/Method;I)V
                    INVOKESPECIAL org.springframework.core.convert.Property.resolveParameterType (Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/MethodParameter;
                    ARETURN
  end private org.springframework.core.MethodParameter resolveWriteMethodParameter()

  private org.springframework.core.MethodParameter resolveParameterType(org.springframework.core.MethodParameter):
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; parameter   (line 177)
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getObjectType ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.core.GenericTypeResolver.resolveParameterType (Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;
                    POP
                    ALOAD_1     // Lorg/springframework/core/MethodParameter; parameter   (line 178)
                    ARETURN
  end private org.springframework.core.MethodParameter resolveParameterType(org.springframework.core.MethodParameter)

  private java.lang.annotation.Annotation[] resolveAnnotations():
                    NEW java.util.LinkedHashMap   (line 182)
                    DUP
                    INVOKESPECIAL java.util.LinkedHashMap.<init> ()V
                    ASTORE_1
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 183)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/reflect/Method; readMethod   (line 184)
                    IFNULL L2
                    ALOAD_2     // Ljava/lang/reflect/Method; readMethod   (line 185)
                    INVOKEVIRTUAL java.lang.reflect.Method.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 6
                    ARRAYLENGTH
                    ISTORE 5
                    ICONST_0
                    ISTORE 4
                    GOTO L1
                L0: ALOAD 6
                    ILOAD 4
                    AALOAD
                    ASTORE_3
                    ALOAD_1     // Ljava/util/Map; annMap   (line 186)
                    ALOAD_3     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD_3     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 4 1   (line 185)
                L1: ILOAD 4
                    ILOAD 5
                    IF_ICMPLT L0
                L2: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 189)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/reflect/Method; writeMethod   (line 190)
                    IFNULL L5
                    ALOAD_3     // Ljava/lang/reflect/Method; writeMethod   (line 191)
                    INVOKEVIRTUAL java.lang.reflect.Method.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L4
                L3: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD_1     // Ljava/util/Map; annMap   (line 192)
                    ALOAD 4     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD 4     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 5 1   (line 191)
                L4: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L3
                L5: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 195)
                    INVOKESPECIAL org.springframework.core.convert.Property.getField ()Ljava/lang/reflect/Field;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/reflect/Field; field   (line 196)
                    IFNULL L8
                    ALOAD 4     // Ljava/lang/reflect/Field; field   (line 197)
                    INVOKEVIRTUAL java.lang.reflect.Field.getAnnotations ()[Ljava/lang/annotation/Annotation;
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L7
                L6: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ALOAD_1     // Ljava/util/Map; annMap   (line 198)
                    ALOAD 5     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.lang.annotation.Annotation.annotationType ()Ljava/lang/Class;
                    ALOAD 5     // Ljava/lang/annotation/Annotation; ann
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC 6 1   (line 197)
                L7: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L6
                L8: ALOAD_1     // Ljava/util/Map; annMap   (line 201)
                    INVOKEINTERFACE java.util.Map.values ()Ljava/util/Collection;
                    ALOAD_1     // Ljava/util/Map; annMap
                    INVOKEINTERFACE java.util.Map.size ()I
                    ANEWARRAY java.lang.annotation.Annotation
                    INVOKEINTERFACE java.util.Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    CHECKCAST [Ljava.lang.annotation.Annotation;
                    ARETURN
  end private java.lang.annotation.Annotation[] resolveAnnotations()

  private java.lang.reflect.Field getField():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 205)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getName ()Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; name   (line 206)
                    INVOKESTATIC org.springframework.util.StringUtils.hasLength (Ljava/lang/String;)Z
                    IFNE L0
                    ACONST_NULL   (line 207)
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 209)
                    INVOKESPECIAL org.springframework.core.convert.Property.declaringClass ()Ljava/lang/Class;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 210)
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/reflect/Field; field   (line 211)
                    IFNONNULL L1
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 213)
                    NEW java.lang.StringBuilder   (line 214)
                    DUP
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_0
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.toLowerCase ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;   (line 213)
                    ASTORE_3     // Ljava/lang/reflect/Field; field
                    ALOAD_3     // Ljava/lang/reflect/Field; field   (line 215)
                    IFNONNULL L1
                    ALOAD_2     // Ljava/lang/Class; declaringClass   (line 216)
                    NEW java.lang.StringBuilder   (line 217)
                    DUP
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_0
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.toUpperCase ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; name
                    ICONST_1
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findField (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;   (line 216)
                    ASTORE_3     // Ljava/lang/reflect/Field; field
                L1: ALOAD_3     // Ljava/lang/reflect/Field; field   (line 220)
                    ARETURN
  end private java.lang.reflect.Field getField()

  private Class declaringClass():
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 224)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    IFNULL L0
                    ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 225)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getReadMethod ()Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    ARETURN
                L0: ALOAD_0     // Lorg/springframework/core/convert/Property; this   (line 228)
                    INVOKEVIRTUAL org.springframework.core.convert.Property.getWriteMethod ()Ljava/lang/reflect/Method;
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    ARETURN
  end private Class declaringClass()

end public final class org.springframework.core.convert.Property

	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageWriter.handleMessage(WeavingAdaptor.java:665)
	at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHolder.handleMessage(WeavingAdaptor.java:615)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1752)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1694)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1464)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1273)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:394)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:281)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:95)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.beans.BeanWrapperImpl.property(BeanWrapperImpl.java:521)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:516)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1365)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:649)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:451)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.curso.spring.springioc0007.Main.init(Main.java:29)
	at com.curso.spring.springioc0007.Main.main(Main.java:24)
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_72\jre\bin
java.vm.version=25.72-b15
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=ES
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven
java.runtime.version=1.8.0_72-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\usuario\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 10
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_72\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\CollabNet\Subversion Client;E:\bin\Sencha\Cmd\5.1.3.61;C:\Users\usuario\bin\Sencha\Cmd\5.1.3.61;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\Program Files (x86)\sbt\\bin;C:\Program Files (x86)\Heroku\bin;C:\Program Files (x86)\git\cmd;C:\Program Files (x86)\QuickTime\QTSystem\;C:\HashiCorp\Vagrant\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\nodejs\;C:\Users\usuario\AppData\Local\.meteor\;C:\Users\usuario\AppData\Roaming\npm;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=10.0
user.home=C:\Users\usuario
user.timezone=Europe/Paris
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=C:\Users\usuario\git\spring\aspectos\Ejemplos Relacionados\SpringIoC0007Maven\target\classes;C:\Users\usuario\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-aspects\3.1.2.RELEASE\spring-aspects-3.1.2.RELEASE.jar;C:\Users\usuario\.m2\repository\org\springframework\spring-context-support\3.1.2.RELEASE\spring-context-support-3.1.2.RELEASE.jar;.\..\aspectjweaver.jar
user.name=usuario
java.vm.specification.version=1.8
sun.java.command=com.curso.spring.springioc0007.Main
java.home=C:\Program Files\Java\jdk1.8.0_72\jre
sun.arch.data.model=64
user.language=es
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_72
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_72\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_72\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_72\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_72\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
Empty
---- org.aspectj.weaver.ltw.LTWWorld@28c97a5 ----
Class loader:
sun.misc.Launcher$AppClassLoader@18b4aac2
Class loader parent:
sun.misc.Launcher$ExtClassLoader@722c41f4
Shadow mungers:
(around(extraFlags: 3): ((((((((((within(@org.springframework.cache.annotation.CacheEvict *) && execution(public * @org.springframework.cache.annotation.CacheEvict *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)) || (((within(@org.springframework.cache.annotation.Caching *) && execution(public * @org.springframework.cache.annotation.Caching *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.CachePut *) && execution(public * @org.springframework.cache.annotation.CachePut *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || (((within(@org.springframework.cache.annotation.Cacheable *) && execution(public * @org.springframework.cache.annotation.Cacheable *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Caching * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.Cacheable * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CacheEvict * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect))) || ((execution(@org.springframework.cache.annotation.CachePut * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.cache.aspectj.AnnotationCacheAspect)))->java.lang.Object org.springframework.cache.aspectj.AbstractCacheAspect.ajc$around$org_springframework_cache_aspectj_AbstractCacheAspect$1$2bc714b5(java.lang.Object, org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint))
(around(extraFlags: 5): ((execution(@org.springframework.scheduling.annotation.Async (void || java.util.concurrent.Future+) *(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)) || (execution((void || java.util.concurrent.Future+) @org.springframework.scheduling.annotation.Async *.*(..)) && persingleton(org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect)))->java.lang.Object org.springframework.scheduling.aspectj.AbstractAsyncExecutionAspect.ajc$around$org_springframework_scheduling_aspectj_AbstractAsyncExecutionAspect$1$6c004c3e(org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint$StaticPart))
org.aspectj.weaver.Checker@5abff562
org.aspectj.weaver.Checker@12140c1d
(before(extraFlags: 4): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$before$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96c(java.lang.Object, org.aspectj.lang.JoinPoint$StaticPart))
(afterThrowing(extraFlags: 1): ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterThrowing$org_springframework_transaction_aspectj_AbstractTransactionAspect$2$2a73e96c(java.lang.Object, java.lang.Throwable))
(afterReturning: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$afterReturning$org_springframework_transaction_aspectj_AbstractTransactionAspect$3$2a73e96c(java.lang.Object))
(after: ((((within(@org.springframework.transaction.annotation.Transactional *) && execution(public * @org.springframework.transaction.annotation.Transactional *.*(..))) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)) || ((execution(@org.springframework.transaction.annotation.Transactional * *(..)) && this(BindingTypePattern(java.lang.Object, 0))) && persingleton(org.springframework.transaction.aspectj.AnnotationTransactionAspect)))->void org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$after$org_springframework_transaction_aspectj_AbstractTransactionAspect$4$2a73e96c(java.lang.Object))
(before: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject.new(..)) && initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..))) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65(java.lang.Object))
(afterReturning: (((((initialization(org.springframework.beans.factory.aspectj.ConfigurableObject+.new(..)) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && !(@this(org.springframework.beans.factory.annotation.Configurable) && if(boolean org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(org.springframework.beans.factory.annotation.Configurable)))) && if(boolean org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$if$6f1(org.aspectj.lang.JoinPoint))) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c(java.lang.Object))
(afterReturning: (((execution(java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport+.readResolve()) && this(BindingTypePattern(java.lang.Object, 0))) && @this(org.springframework.beans.factory.annotation.Configurable)) && persingleton(org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect))->void org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect.ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052(java.lang.Object))
Type mungers:
(BcelTypeMunger ResolvedTypeMunger(Method, java.lang.Object org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport.readResolve()))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(java.lang.Object))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.ConfigurableObject))
(BcelTypeMunger ExposeTypeMunger(org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport))
Late Type mungers:
Empty
